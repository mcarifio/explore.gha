# gh workflow run --workflow=start.yaml
# bin/wf.run start.yaml
name: start
run-name: "github.actor ${{ github.actor }}"

on:
  # allows gh workflow run
  workflow_dispatch:
  push:

defaults:
  run:
     # set -Eeuo pipefail, note that --init-file ${file} is NOT honored
     # shell: bash -Eueo pipefail -x -- {0}
     shell: bash -Eeuo pipefail -- {0}

jobs:
  start-job0:
    runs-on: ubuntu-latest
    env:
      current_job: start-job0
      BUILD_ROOT: "${{ github.workspace }}"
      # (indirectly) sourced before each step
      BASH_ENV: "${{ github.workspace }}/bash_env.sh"
    steps:
      - name: ${{ env.current_job }}/checkout
        env:
          current_step: checkout
        uses: actions/checkout@v4

      - name: ${{ env.current_job }}/dump-contexts
        env:
          current_step: dump-contexts
        uses: ./.github/actions/dump
        shell: bash -Eeuo pipefail -- {0}


      # contexts: github, env, job, jobs, steps, runner, secrets, strategy, matrix, needs, inputs, config, status
      - name: ${{ env.current_job }}/announce
        env:
          current_step: announce
        run: |
          context env '${{ toJSON(env) }}'
          context vars '${{ toJSON(vars) }}'

      - name: ${{ env.current_job }}/tree
        env:
          current_step: tree
        run: |
          tree ${PWD}

      - name: ${{ env.current_job }}/EXIT
        env:
          current_step: EXIT
        if: always()
        run: |
          echo "${{ env.current_step }}: ${{ job.status }}"
